"use strict";(self.webpackChunkdynamode_docs=self.webpackChunkdynamode_docs||[]).push([[896],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>k});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),s=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},d=function(t){var e=s(t.components);return n.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,p=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),m=s(a),k=r,g=m["".concat(p,".").concat(k)]||m[k]||u[k]||i;return a?n.createElement(g,l(l({ref:e},d),{},{components:a})):n.createElement(g,l({ref:e},d))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5374:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const i={title:"Decorators | Dynamode",description:"Decorators",sidebar_label:"Decorators",hide_title:!0},l="Decorators",o={unversionedId:"guide/entity/decorators",id:"guide/entity/decorators",title:"Decorators | Dynamode",description:"Decorators",source:"@site/docs/guide/entity/decorators.mdx",sourceDirName:"guide/entity",slug:"/guide/entity/decorators",permalink:"/docs/guide/entity/decorators",draft:!1,editUrl:"https://www.github.com/blazejkustra/dynamode/tree/master/docs/docs/guide/entity/decorators.mdx",tags:[],version:"current",frontMatter:{title:"Decorators | Dynamode",description:"Decorators",sidebar_label:"Decorators",hide_title:!0},sidebar:"sidebar",previous:{title:"Modeling",permalink:"/docs/guide/entity/modeling"},next:{title:"Table Manager",permalink:"/docs/guide/managers/tableManager"}},p={},s=[{value:"attribute.partitionKey.string(options?)",id:"attributepartitionkeystringoptions",level:2},{value:"Description",id:"description",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Examples",id:"examples",level:3},{value:"attribute.partitionKey.number()",id:"attributepartitionkeynumber",level:2},{value:"Description",id:"description-1",level:3},{value:"Examples",id:"examples-1",level:3},{value:"attribute.sortKey.string(options?)",id:"attributesortkeystringoptions",level:2},{value:"Description",id:"description-2",level:3},{value:"Arguments",id:"arguments-1",level:3},{value:"Examples",id:"examples-2",level:3},{value:"attribute.sortKey.number()",id:"attributesortkeynumber",level:2},{value:"Description",id:"description-3",level:3},{value:"Examples",id:"examples-3",level:3},{value:"attribute.gsi.partitionKey.string(options)",id:"attributegsipartitionkeystringoptions",level:2},{value:"Description",id:"description-4",level:3},{value:"Arguments",id:"arguments-2",level:3},{value:"Examples",id:"examples-4",level:3},{value:"attribute.gsi.partitionKey.number(options)",id:"attributegsipartitionkeynumberoptions",level:2},{value:"Description",id:"description-5",level:3},{value:"Arguments",id:"arguments-3",level:3},{value:"Examples",id:"examples-5",level:3},{value:"attribute.gsi.sortKey.string(options)",id:"attributegsisortkeystringoptions",level:2},{value:"Description",id:"description-6",level:3},{value:"Arguments",id:"arguments-4",level:3},{value:"Examples",id:"examples-6",level:3},{value:"attribute.gsi.sortKey.number(options)",id:"attributegsisortkeynumberoptions",level:2},{value:"Description",id:"description-7",level:3},{value:"Arguments",id:"arguments-5",level:3},{value:"Examples",id:"examples-7",level:3},{value:"attribute.lsi.sortKey.string(options)",id:"attributelsisortkeystringoptions",level:2},{value:"Description",id:"description-8",level:3},{value:"Arguments",id:"arguments-6",level:3},{value:"Examples",id:"examples-8",level:3},{value:"attribute.lsi.sortKey.number(options)",id:"attributelsisortkeynumberoptions",level:2},{value:"Description",id:"description-9",level:3},{value:"Arguments",id:"arguments-7",level:3},{value:"Examples",id:"examples-9",level:3},{value:"attribute.string(options?)",id:"attributestringoptions",level:2},{value:"Description",id:"description-10",level:3},{value:"Arguments",id:"arguments-8",level:3},{value:"Examples",id:"examples-10",level:3},{value:"attribute.number()",id:"attributenumber",level:2},{value:"Description",id:"description-11",level:3},{value:"Examples",id:"examples-11",level:3},{value:"attribute.boolean()",id:"attributeboolean",level:2},{value:"Description",id:"description-12",level:3},{value:"Examples",id:"examples-12",level:3},{value:"attribute.object()",id:"attributeobject",level:2},{value:"Description",id:"description-13",level:3},{value:"Examples",id:"examples-13",level:3},{value:"attribute.array()",id:"attributearray",level:2},{value:"Description",id:"description-14",level:3},{value:"Examples",id:"examples-14",level:3},{value:"attribute.set()",id:"attributeset",level:2},{value:"Description",id:"description-15",level:3},{value:"Examples",id:"examples-15",level:3},{value:"attribute.map()",id:"attributemap",level:2},{value:"Description",id:"description-16",level:3},{value:"Examples",id:"examples-16",level:3},{value:"attribute.date.string(options?)",id:"attributedatestringoptions",level:2},{value:"Description",id:"description-17",level:3},{value:"Arguments",id:"arguments-9",level:3},{value:"Examples",id:"examples-17",level:3},{value:"attribute.date.number()",id:"attributedatenumber",level:2},{value:"Description",id:"description-18",level:3},{value:"Examples",id:"examples-18",level:3},{value:"attribute.prefix(value)",id:"attributeprefixvalue",level:2},{value:"Description",id:"description-19",level:3},{value:"Arguments",id:"arguments-10",level:3},{value:"Examples",id:"examples-19",level:3},{value:"attribute.suffix(value)",id:"attributesuffixvalue",level:2},{value:"Description",id:"description-20",level:3},{value:"Arguments",id:"arguments-11",level:3},{value:"Examples",id:"examples-20",level:3}],d={toc:s};function u(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"decorators"},"Decorators"),(0,r.kt)("p",null,"Decorators are crucial for modelling  entities. Dynamode uses them to bind model attributes with DynamoDB tables."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Dynamode uses experimental decorators, it is a language feature which hasn\u2019t yet been fully ratified into the JavaScript specification - ",(0,r.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/tsconfig#experimentalDecorators"},"source"),". "),(0,r.kt)("p",{parentName:"admonition"},"Add following lines in ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," in order to use decorators with Typescript (even if you are using Typescript 5.0+):"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'{\n  "compilerOptions": {\n    ...\n    "experimentalDecorators": true,\n    ...\n  }\n}\n'))),(0,r.kt)("p",null,"To see examples of decorators in use - check out ",(0,r.kt)("a",{parentName:"p",href:"/docs/guide/entity/modeling"},"modeling")," page."),(0,r.kt)("h2",{id:"attributepartitionkeystringoptions"},"attribute.partitionKey.string(options?)"),(0,r.kt)("h3",{id:"description"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag the partition key attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"attribute.partitionKey.string(options?) or attribute.partitionKey.number()")," is required in every entity.")),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("p",null,"You can add optional ",(0,r.kt)("inlineCode",{parentName:"p"},"options")," parameter that is an object. The table below represents options that you can pass in:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"prefix")),(0,r.kt)("td",{parentName:"tr",align:null},"Shortcut for ",(0,r.kt)("a",{parentName:"td",href:"/docs/guide/entity/decorators#prefixvalue"},"prefix(value)")," decorator"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"suffix")),(0,r.kt)("td",{parentName:"tr",align:null},"Shortcut for ",(0,r.kt)("a",{parentName:"td",href:"/docs/guide/entity/decorators#suffixvalue"},"suffix(value)")," decorator"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.partitionKey.string()\n  PK: string;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributepartitionkeynumber"},"attribute.partitionKey.number()"),(0,r.kt)("h3",{id:"description-1"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag the partition key attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"attribute.partitionKey.string(options?) or attribute.partitionKey.number()")," is required in every entity.")),(0,r.kt)("h3",{id:"examples-1"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.partitionKey.number()\n  PK: number;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributesortkeystringoptions"},"attribute.sortKey.string(options?)"),(0,r.kt)("h3",{id:"description-2"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag the sort key attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"."),(0,r.kt)("h3",{id:"arguments-1"},"Arguments"),(0,r.kt)("p",null,"You can add optional ",(0,r.kt)("inlineCode",{parentName:"p"},"options")," parameter that is an object. The table below represents options that you can pass in:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"prefix")),(0,r.kt)("td",{parentName:"tr",align:null},"Shortcut for ",(0,r.kt)("a",{parentName:"td",href:"/docs/guide/entity/decorators#prefixvalue"},"prefix(value)")," decorator"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"suffix")),(0,r.kt)("td",{parentName:"tr",align:null},"Shortcut for ",(0,r.kt)("a",{parentName:"td",href:"/docs/guide/entity/decorators#suffixvalue"},"suffix(value)")," decorator"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,r.kt)("h3",{id:"examples-2"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.sortKey.string()\n  SK: string;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributesortkeynumber"},"attribute.sortKey.number()"),(0,r.kt)("h3",{id:"description-3"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag the sort key attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),"."),(0,r.kt)("h3",{id:"examples-3"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.sortKey.number()\n  SK: number;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributegsipartitionkeystringoptions"},"attribute.gsi.partitionKey.string(options)"),(0,r.kt)("h3",{id:"description-4"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag a global secondary index partition key attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"."),(0,r.kt)("h3",{id:"arguments-2"},"Arguments"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"options")," - Options that configure the index. The table below represents options that you can pass in:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"indexName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the index for the partition key."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"prefix")),(0,r.kt)("td",{parentName:"tr",align:null},"Shortcut for ",(0,r.kt)("a",{parentName:"td",href:"/docs/guide/entity/decorators#prefixvalue"},"prefix(value)")," decorator"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"suffix")),(0,r.kt)("td",{parentName:"tr",align:null},"Shortcut for ",(0,r.kt)("a",{parentName:"td",href:"/docs/guide/entity/decorators#suffixvalue"},"suffix(value)")," decorator"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,r.kt)("h3",{id:"examples-4"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.gsi.partitionKey.string({ indexName: 'GSI1' })\n  GSI_PK: string;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributegsipartitionkeynumberoptions"},"attribute.gsi.partitionKey.number(options)"),(0,r.kt)("h3",{id:"description-5"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag a global secondary index partition key attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),"."),(0,r.kt)("h3",{id:"arguments-3"},"Arguments"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"options")," - Options that configure the index. The table below represents options that you can pass in:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"indexName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the index for the partition key."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A")))),(0,r.kt)("h3",{id:"examples-5"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.gsi.partitionKey.number({ indexName: 'GSI1' })\n  GSI_PK: number;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributegsisortkeystringoptions"},"attribute.gsi.sortKey.string(options)"),(0,r.kt)("h3",{id:"description-6"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag a global secondary index sort key attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"."),(0,r.kt)("h3",{id:"arguments-4"},"Arguments"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"options")," - Options that configure the index. The table below represents options that you can pass in:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"indexName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the index for the sort key."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"prefix")),(0,r.kt)("td",{parentName:"tr",align:null},"Shortcut for ",(0,r.kt)("a",{parentName:"td",href:"/docs/guide/entity/decorators#prefixvalue"},"prefix(value)")," decorator"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"suffix")),(0,r.kt)("td",{parentName:"tr",align:null},"Shortcut for ",(0,r.kt)("a",{parentName:"td",href:"/docs/guide/entity/decorators#suffixvalue"},"suffix(value)")," decorator"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,r.kt)("h3",{id:"examples-6"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.gsi.sortKey.string({ indexName: 'GSI1' })\n  GSI_SK: string;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributegsisortkeynumberoptions"},"attribute.gsi.sortKey.number(options)"),(0,r.kt)("h3",{id:"description-7"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag a global secondary index sort key attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),"."),(0,r.kt)("h3",{id:"arguments-5"},"Arguments"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"options")," - Options that configure the index. The table below represents options that you can pass in:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"indexName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the index for the sort key."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A")))),(0,r.kt)("h3",{id:"examples-7"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.gsi.sortKey.number({ indexName: 'GSI1' })\n  GSI_SK: number;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributelsisortkeystringoptions"},"attribute.lsi.sortKey.string(options)"),(0,r.kt)("h3",{id:"description-8"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag a local secondary index sort key attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"."),(0,r.kt)("h3",{id:"arguments-6"},"Arguments"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"options")," - Options that configure the index. The table below represents options that you can pass in:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"indexName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the index for the sort key."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"prefix")),(0,r.kt)("td",{parentName:"tr",align:null},"Shortcut for ",(0,r.kt)("a",{parentName:"td",href:"/docs/guide/entity/decorators#prefixvalue"},"prefix(value)")," decorator"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"suffix")),(0,r.kt)("td",{parentName:"tr",align:null},"Shortcut for ",(0,r.kt)("a",{parentName:"td",href:"/docs/guide/entity/decorators#suffixvalue"},"suffix(value)")," decorator"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,r.kt)("h3",{id:"examples-8"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.gsi.sortKey.string({ indexName: 'GSI1' })\n  GSI_SK: string;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributelsisortkeynumberoptions"},"attribute.lsi.sortKey.number(options)"),(0,r.kt)("h3",{id:"description-9"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag a local secondary index sort key attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),"."),(0,r.kt)("h3",{id:"arguments-7"},"Arguments"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"options")," - Options that configure the index. The table below represents options that you can pass in:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"indexName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the index for the sort key."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"N/A")))),(0,r.kt)("h3",{id:"examples-9"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.gsi.sortKey.number({ indexName: 'GSI1' })\n  GSI_SK: number;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributestringoptions"},"attribute.string(options?)"),(0,r.kt)("h3",{id:"description-10"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag an attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"."),(0,r.kt)("h3",{id:"arguments-8"},"Arguments"),(0,r.kt)("p",null,"You can add optional ",(0,r.kt)("inlineCode",{parentName:"p"},"options")," parameter that is an object. The table below represents options that you can pass in:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"prefix")),(0,r.kt)("td",{parentName:"tr",align:null},"Shortcut for ",(0,r.kt)("a",{parentName:"td",href:"/docs/guide/entity/decorators#prefixvalue"},"prefix(value)")," decorator"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"suffix")),(0,r.kt)("td",{parentName:"tr",align:null},"Shortcut for ",(0,r.kt)("a",{parentName:"td",href:"/docs/guide/entity/decorators#suffixvalue"},"suffix(value)")," decorator"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,r.kt)("h3",{id:"examples-10"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.string()\n  key: string;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributenumber"},"attribute.number()"),(0,r.kt)("h3",{id:"description-11"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag an attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),"."),(0,r.kt)("h3",{id:"examples-11"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.number()\n  key: number;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributeboolean"},"attribute.boolean()"),(0,r.kt)("h3",{id:"description-12"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag an attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),"."),(0,r.kt)("h3",{id:"examples-12"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.boolean()\n  key: boolean;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributeobject"},"attribute.object()"),(0,r.kt)("h3",{id:"description-13"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag an attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"Record<string, unknown>")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"{ [key: string]: unknown }")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"{ [key]: unknown, ... }"),"."),(0,r.kt)("h3",{id:"examples-13"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.object()\n  key: Record<string, number>;\n\n  @attribute.object()\n  key2: { [key: string]: unknown };\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributearray"},"attribute.array()"),(0,r.kt)("h3",{id:"description-14"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag an attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"Array<T>"),"."),(0,r.kt)("h3",{id:"examples-14"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.array()\n  key: Array<unknown>;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributeset"},"attribute.set()"),(0,r.kt)("h3",{id:"description-15"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag an attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"Set<string | number>"),"."),(0,r.kt)("h3",{id:"examples-15"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.set()\n  key: Set<string>;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributemap"},"attribute.map()"),(0,r.kt)("h3",{id:"description-16"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag an attribute of type ",(0,r.kt)("inlineCode",{parentName:"p"},"Map<string, unknown>"),"."),(0,r.kt)("h3",{id:"examples-16"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.map()\n  key: Map<string, unknown>;\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributedatestringoptions"},"attribute.date.string(options?)"),(0,r.kt)("h3",{id:"description-17"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag an attribute that holds a ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),", the attribute is saved in DynamoDB in ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/ISO_8601"},"ISO 8601")," format."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"attribute.date.string(options?)")," has to decorate attribute of ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date"},(0,r.kt)("inlineCode",{parentName:"a"},"Date"))," type.")),(0,r.kt)("h3",{id:"arguments-9"},"Arguments"),(0,r.kt)("p",null,"You can pass optional ",(0,r.kt)("inlineCode",{parentName:"p"},"options")," parameter that is an object. The table below represents options that you can pass in:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"prefix")),(0,r.kt)("td",{parentName:"tr",align:null},"Shortcut for ",(0,r.kt)("a",{parentName:"td",href:"/docs/guide/entity/decorators#prefixvalue"},"prefix(value)")," decorator"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"suffix")),(0,r.kt)("td",{parentName:"tr",align:null},"Shortcut for ",(0,r.kt)("a",{parentName:"td",href:"/docs/guide/entity/decorators#suffixvalue"},"suffix(value)")," decorator"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,r.kt)("h3",{id:"examples-17"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.date.string()\n  CREATED_AT: Date; // saved as ISO 8601: '2022-10-18T20:36:20.511Z'\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributedatenumber"},"attribute.date.number()"),(0,r.kt)("h3",{id:"description-18"},"Description"),(0,r.kt)("p",null,"This decorator is used to tag an attribute that holds a ",(0,r.kt)("inlineCode",{parentName:"p"},"Date"),", the attribute is saved in DynamoDB in ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Unix_time"},"Unix timestamp")," format. "),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"attribute.date.number(options?)")," has to decorate attribute of ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date"},(0,r.kt)("inlineCode",{parentName:"a"},"Date"))," type.")),(0,r.kt)("h3",{id:"examples-18"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.date.number()\n  updatedAt: Date; // saved as Unix timestamp: 1688307056\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributeprefixvalue"},"attribute.prefix(value)"),(0,r.kt)("h3",{id:"description-19"},"Description"),(0,r.kt)("p",null,"This decorator is used to add a static prefix to the value (only for attributes of ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," type). You can customize a separator that is added between prefix and actual value with ",(0,r.kt)("a",{parentName:"p",href:"/docs/guide/dynamode#dynamodeseparator"},(0,r.kt)("inlineCode",{parentName:"a"},"Dynamode")," class"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Prefix is added whenever you interact with a attribute."),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"All EntityManager static methods (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"EntityManager.get()"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"EntityManager.update()"),")"),(0,r.kt)("li",{parentName:"ul"},"Condition, Query and Scan builders"),(0,r.kt)("li",{parentName:"ul"},"transactionGet and transactionWrite"))),(0,r.kt)("h3",{id:"arguments-10"},"Arguments"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"value: string")," - String that will be prepended to the value"),(0,r.kt)("h3",{id:"examples-19"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.prefix(\"attr_prefix\")\n  @attribute.string()\n  attr: string; // for 'attr_value' -> 'attr_prefix#attr_value'\n  ...\n}\n")),(0,r.kt)("h2",{id:"attributesuffixvalue"},"attribute.suffix(value)"),(0,r.kt)("h3",{id:"description-20"},"Description"),(0,r.kt)("p",null,"This decorator is used to add a static suffix to the value (only for attributes of ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," type). You can customize a separator that is added between suffix and actual value with ",(0,r.kt)("a",{parentName:"p",href:"/docs/guide/dynamode#dynamodeseparator"},(0,r.kt)("inlineCode",{parentName:"a"},"Dynamode")," class"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Prefix is added whenever you interact with a attribute."),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"All EntityManager static methods (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"EntityManager.get()"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"EntityManager.update()"),")"),(0,r.kt)("li",{parentName:"ul"},"Condition, Query and Scan builders"),(0,r.kt)("li",{parentName:"ul"},"transactionGet and transactionWrite"))),(0,r.kt)("h3",{id:"arguments-11"},"Arguments"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"value: string")," - String that will be prepended to the value"),(0,r.kt)("h3",{id:"examples-20"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class YourModel extends Entity { \n  ...\n  @attribute.suffix(\"attr_suffix\")\n  @attribute.string()\n  attr: string; // for 'attr_value' -> 'attr_value#attr_suffix'\n  ...\n}\n")))}u.isMDXComponent=!0}}]);