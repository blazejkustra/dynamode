"use strict";(self.webpackChunkdynamode_docs=self.webpackChunkdynamode_docs||[]).push([[821],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=d(a),c=r,g=u["".concat(s,".").concat(c)]||u[c]||p[c]||l;return a?n.createElement(g,i(i({ref:t},m),{},{components:a})):n.createElement(g,i({ref:t},m))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>c});var n=a(7462),r=a(7294),l=a(6010),i=a(2389),o=a(7392),s=a(7094),d=a(2466);const m="tabList__CuJ",p="tabItem_LNqP";function u(e){var t;const{lazy:a,block:i,defaultValue:u,values:c,groupId:g,className:b}=e,y=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=c??y.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),f=(0,o.l)(k,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===u?u:u??(null==(t=y.find((e=>e.props.default)))?void 0:t.props.value)??y[0].props.value;if(null!==h&&!k.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:v}=(0,s.U)(),[T,M]=(0,r.useState)(h),E=[],{blockElementScrollPositionUntilNextRender:x}=(0,d.o5)();if(null!=g){const e=N[g];null!=e&&e!==T&&k.some((t=>t.value===e))&&M(e)}const w=e=>{const t=e.currentTarget,a=E.indexOf(t),n=k[a].value;n!==T&&(x(t),M(n),null!=g&&v(g,String(n)))},D=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=E.indexOf(e.currentTarget)+1;a=E[t]??E[0];break}case"ArrowLeft":{const t=E.indexOf(e.currentTarget)-1;a=E[t]??E[E.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",m)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":i},b)},k.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>E.push(e),onKeyDown:D,onFocus:w,onClick:w},i,{className:(0,l.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":T===t})}),a??t)}))),a?(0,r.cloneElement)(y.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},y.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function c(e){const t=(0,i.Z)();return r.createElement(u,(0,n.Z)({key:String(t)},e))}},4157:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));a(5488),a(5162);const l={title:"Table Manager | Dynamode",description:"Table Manager",sidebar_label:"Table Manager",hide_title:!0},i="Table Manager",o={unversionedId:"guide/table/tableManager",id:"guide/table/tableManager",title:"Table Manager | Dynamode",description:"Table Manager",source:"@site/docs/guide/table/tableManager.mdx",sourceDirName:"guide/table",slug:"/guide/table/tableManager",permalink:"/dynamode/docs/guide/table/tableManager",draft:!1,editUrl:"https://github.com/blazejkustra/dynamode/tree/master/docs/docs/guide/table/tableManager.mdx",tags:[],version:"current",frontMatter:{title:"Table Manager | Dynamode",description:"Table Manager",sidebar_label:"Table Manager",hide_title:!0},sidebar:"sidebar",previous:{title:"Decorators",permalink:"/dynamode/docs/guide/entity/decorators"},next:{title:"Entity Manager",permalink:"/dynamode/docs/guide/table/entityManager"}},s={},d=[{value:"new TableManager(tableEntity, tableMetadata)",id:"new-tablemanagertableentity-tablemetadata",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Examples",id:"examples",level:3},{value:"TableManager.entityManager(entity?)",id:"tablemanagerentitymanagerentity",level:2},{value:"Arguments",id:"arguments-1",level:3},{value:"Examples",id:"examples-1",level:3},{value:"TableManager.create(options?)",id:"tablemanagercreateoptions",level:2},{value:"TableManager.createIndex(indexName, options?)",id:"tablemanagercreateindexindexname-options",level:2},{value:"TableManager.deleteIndex(indexName, options?)",id:"tablemanagerdeleteindexindexname-options",level:2},{value:"TableManager.validate(options?)",id:"tablemanagervalidateoptions",level:2}],m={toc:d};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"table-manager"},"Table Manager"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TableManager")," is used to perform operations on DynamoDB table. It also initializes ",(0,r.kt)("a",{parentName:"p",href:"/docs/guide/table/entityManager"},(0,r.kt)("inlineCode",{parentName:"a"},"Entity Managers"))," that act as repositories for your models. "),(0,r.kt)("h2",{id:"new-tablemanagertableentity-tablemetadata"},"new TableManager(tableEntity, tableMetadata)"),(0,r.kt)("p",null,"This constructor initializes TableManager class that acts as a repository that is used to perform operations on a DynamoDB table."),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"tableEntity"))," - Table class that inherits from ",(0,r.kt)("a",{parentName:"p",href:"/docs/guide/entity/modeling"},"Entity")," class. It has to define all primary and secondary indexes defined on the DynamoDB table. To learn more check out ",(0,r.kt)("a",{parentName:"p",href:"/docs/guide/entity/modeling"},"Modeling")," page."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"tableMetadata"))," - Metadata that describes table name, primary key, secondary index keys and createdAt/updatedAt timestamps. Dynamode uses metadata in all underlying methods so be cautious when setting it up. "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"tableName"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Name of the table in DynamoDB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"N/A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"partitionKey"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Name of the partition key"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"N/A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"sortKey"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Name of the sort key"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"N/A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"indexes"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Object that defines secondary indexes"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"{ [indexName: string], {partitionKey?: string; sortKey?:string } }")),(0,r.kt)("td",{parentName:"tr",align:"left"},"N/A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"createdAt"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Name of the createdAt timestamp"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"undefined")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"updatedAt"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Name of the updatedAt timestamp"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"undefined")))),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("p",null,"AllPossibleProperties model is defined ",(0,r.kt)("a",{parentName:"p",href:"/docs/guide/entity/modeling#all-possible-properties"},"here"),". To initialize its table manager, use ",(0,r.kt)("inlineCode",{parentName:"p"},"TableManager")," constructor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import TableManager from 'dynamode/table';\n\nconst AllPossiblePropertiesTableManager = new TableManager(AllPossibleProperties, {\n  tableName: TABLE_NAME,\n  partitionKey: 'partitionKey',\n  sortKey: 'sortKey',\n  indexes: {\n    GSI_1_NAME: {\n      partitionKey: 'GSI_1_PK',\n      sortKey: 'GSI_1_SK',\n    },\n    LSI_1_NAME: {\n      sortKey: 'LSI_1_SK',\n    },\n  },\n  createdAt: 'createdAt',\n  updatedAt: 'updatedAt',\n});\n")),(0,r.kt)("h2",{id:"tablemanagerentitymanagerentity"},"TableManager.entityManager(entity?)"),(0,r.kt)("p",null,"This method initializes ",(0,r.kt)("a",{parentName:"p",href:"/docs/guide/table/entityManager"},(0,r.kt)("inlineCode",{parentName:"a"},"EntityManager"))," class that acts as a repository that is used to perform operations on a given model. To learn more check out ",(0,r.kt)("a",{parentName:"p",href:"/docs/guide/table/entityManager"},(0,r.kt)("inlineCode",{parentName:"a"},"Entity Manager"))," page."),(0,r.kt)("h3",{id:"arguments-1"},"Arguments"),(0,r.kt)("p",null,"You can add optional ",(0,r.kt)("inlineCode",{parentName:"p"},"entity")," parameter which is a model that inherits from ",(0,r.kt)("inlineCode",{parentName:"p"},"tableEntity")," class."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"entity"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Entity")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Entity class that inherits from ",(0,r.kt)("inlineCode",{parentName:"td"},"tableEntity")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"tableEntity")," (argument passed in ",(0,r.kt)("inlineCode",{parentName:"td"},"TableManager")," constructor)")))),(0,r.kt)("h3",{id:"examples-1"},"Examples"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/guide/entity/modeling#inheritance"},"BaseTable")," is an example class that extends ",(0,r.kt)("a",{parentName:"p",href:"/docs/guide/table/entityManager"},"Entity"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import TableManager from 'dynamode/table';\n\nconst BaseTableManager = new TableManager(...);\n\n// BaseTable entity manager\nconst BaseTableEntityManager = BaseTableManager.entityManager();\n\n// EntityOne entity manager\nconst EntityOneManager = BaseTableManager.entityManager(EntityOne);\n\n// EntityTwo entity manager\nconst EntityTwoManager = BaseTableManager.entityManager(EntityTwo);\n\n// EntityThree entity manager\nconst EntityThreeManager = BaseTableManager.entityManager(EntityThree);\n")),(0,r.kt)("h2",{id:"tablemanagercreateoptions"},"TableManager.create(options?)"),(0,r.kt)("p",null,"This method creates a DynamoDB table."),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"This method isn't tested yet. Use it at your own risk.")),(0,r.kt)("h2",{id:"tablemanagercreateindexindexname-options"},"TableManager.createIndex(indexName, options?)"),(0,r.kt)("p",null,"This method creates a secondary index in DynamoDB table."),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"This method isn't tested yet. Use it at your own risk.")),(0,r.kt)("h2",{id:"tablemanagerdeleteindexindexname-options"},"TableManager.deleteIndex(indexName, options?)"),(0,r.kt)("p",null,"This method deletes a secondary index in DynamoDB table."),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"This method isn't tested yet. Use it at your own risk.")),(0,r.kt)("h2",{id:"tablemanagervalidateoptions"},"TableManager.validate(options?)"),(0,r.kt)("p",null,"This method validates the integrity of TableEntity and DynamoDB table."),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"This method isn't tested yet. Use it at your own risk.")))}p.isMDXComponent=!0}}]);